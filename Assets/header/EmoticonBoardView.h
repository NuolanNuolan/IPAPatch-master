//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Mar 29 2017 23:22:24).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIView.h"

#import "EmoticonBoardPageCollectionControllerDelegate-Protocol.h"
#import "EmoticonBoardRecommendViewDelegate-Protocol.h"
#import "EmoticonGridViewDelegate-Protocol.h"
#import "EmoticonRecommendMgrExt-Protocol.h"
#import "EmoticonTabItemViewDelegate-Protocol.h"
#import "EmoticonTabRecommendMgrExt-Protocol.h"
#import "ExpressionMgrExt-Protocol.h"
#import "IEmoticonMgrExt-Protocol.h"
#import "IEmoticonPackageMgrExt-Protocol.h"
#import "IMMLanguageMgrExt-Protocol.h"
#import "MMKernelExt-Protocol.h"
#import "QQEmojiGridViewDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class EmoticonBoardPageCollectionController, EmoticonBoardSliderView, EmoticonTabItemView, MMUIScrollView, NSArray, NSMutableArray, NSString, UIButton, UIImageView, UIView;
@protocol BaseEmoticonViewDelegate, EmoticonBoardViewDelegate;

@interface EmoticonBoardView : MMUIView <IMMLanguageMgrExt, MMKernelExt, IEmoticonPackageMgrExt, EmoticonGridViewDelegate, EmoticonRecommendMgrExt, QQEmojiGridViewDelegate, IEmoticonMgrExt, EmoticonTabItemViewDelegate, UIScrollViewDelegate, EmoticonTabRecommendMgrExt, ExpressionMgrExt, EmoticonBoardRecommendViewDelegate, EmoticonBoardPageCollectionControllerDelegate>
{
    id <BaseEmoticonViewDelegate> m_emoticonSendDelegate;
    EmoticonBoardPageCollectionController *m_pageCollectionController;
    UIView *m_pageCollectionBackgroundView;
    UIView *m_lineView;
    EmoticonBoardSliderView *m_sliderView;
    _Bool _isSingleTab;
    unsigned long long _emojiUseScene;
    NSString *_finishButtonTitle;
    unsigned long long _buttonStyle;
    id <EmoticonBoardViewDelegate> _m_delegate;
    NSMutableArray *_m_emoticonPagesArray;
    UIView *_m_bottomBar;
    MMUIScrollView *_m_scrollTabBar;
    UIButton *_m_sendButton;
    UIView *_m_sendButtonBackgroundView;
    EmoticonTabItemView *_m_floatingSettingBtn;
    UIImageView *_m_newBadge;
    NSArray *_m_emoticonTabItems;
    EmoticonTabItemView *_m_recommendItemView;
    NSString *_lastSelectedPid;
    long long _m_tabQQIndex;
}

+ (void)unRegisterInstanceDelegate;
+ (void)destroyInstance;
+ (id)sharedInstance;
@property(nonatomic) long long m_tabQQIndex; // @synthesize m_tabQQIndex=_m_tabQQIndex;
@property(retain, nonatomic) NSString *lastSelectedPid; // @synthesize lastSelectedPid=_lastSelectedPid;
@property(retain, nonatomic) EmoticonTabItemView *m_recommendItemView; // @synthesize m_recommendItemView=_m_recommendItemView;
@property(retain, nonatomic) NSArray *m_emoticonTabItems; // @synthesize m_emoticonTabItems=_m_emoticonTabItems;
@property(retain, nonatomic) UIImageView *m_newBadge; // @synthesize m_newBadge=_m_newBadge;
@property(retain, nonatomic) EmoticonTabItemView *m_floatingSettingBtn; // @synthesize m_floatingSettingBtn=_m_floatingSettingBtn;
@property(retain, nonatomic) UIView *m_sendButtonBackgroundView; // @synthesize m_sendButtonBackgroundView=_m_sendButtonBackgroundView;
@property(retain, nonatomic) UIButton *m_sendButton; // @synthesize m_sendButton=_m_sendButton;
@property(retain, nonatomic) MMUIScrollView *m_scrollTabBar; // @synthesize m_scrollTabBar=_m_scrollTabBar;
@property(retain, nonatomic) UIView *m_bottomBar; // @synthesize m_bottomBar=_m_bottomBar;
@property(retain, nonatomic) NSMutableArray *m_emoticonPagesArray; // @synthesize m_emoticonPagesArray=_m_emoticonPagesArray;
@property(nonatomic) __weak id <EmoticonBoardViewDelegate> m_delegate; // @synthesize m_delegate=_m_delegate;
@property(nonatomic) unsigned long long buttonStyle; // @synthesize buttonStyle=_buttonStyle;
@property(retain, nonatomic) NSString *finishButtonTitle; // @synthesize finishButtonTitle=_finishButtonTitle;
@property(nonatomic) _Bool isSingleTab; // @synthesize isSingleTab=_isSingleTab;
@property(nonatomic) unsigned long long emojiUseScene; // @synthesize emojiUseScene=_emojiUseScene;
- (void).cxx_destruct;
- (void)onEmoticonBoardRecommendViewTapWithPid:(id)arg1;
- (void)OnEmoticonTabRecommendChanged;
- (void)scrollViewDidScroll:(id)arg1;
- (void)onEmoticonTabItemViewTaped:(id)arg1;
- (void)setTabButtonSelected:(_Bool)arg1 atIndex:(long long)arg2;
- (void)layoutSubviews;
- (void)onTapDeleteButton;
- (void)onTapEmoticonWithCode:(id)arg1;
- (void)onTapEmoticonWrap:(id)arg1;
- (void)didScrollToOffsetValue:(double)arg1;
- (void)didStopAtPage:(id)arg1 pageOffset:(id)arg2;
- (void)onPreQuit;
- (void)onLanguageChange;
- (void)OnEmoticonRecommendNewStateChangedForBoardView:(_Bool)arg1;
- (void)OnEmoticonRecommendNewStateChanged:(_Bool)arg1;
- (void)OnUpdateEmoticonPackageListAfterSort;
- (void)OnUpdateEmoticonPackageList;
- (void)OnUpdateEmoticonList;
- (void)onEmojiBoardKeyListChanged;
- (void)onTopBarFrameChanged;
- (void)OnSend:(id)arg1;
- (void)onShowSetting;
- (_Bool)selectTabOfPid:(id)arg1 isForceUpdate:(_Bool)arg2;
- (void)changeTabToPid:(id)arg1;
- (void)clearTabHighlight;
- (void)OnReloadBottomBar;
- (int)emotionRecommandMaxCountConfig;
- (void)updateNew:(_Bool)arg1;
- (id)getEmoticonArrayWithPackageArray:(id)arg1;
- (id)customPackageId;
- (id)getRecommendTabWrapsWithStickerPackage:(id)arg1;
- (void)reloadEmoticonViewDataWithStickerPackages:(id)arg1;
- (void)reloadTabItemsWithStickerPackages:(id)arg1;
- (id)GetCurrentViewController;
- (id)getEmoticonTabItemsWithStickerPackages:(id)arg1;
- (id)getStickerPackages;
- (void)onSliderValueChanged:(id)arg1;
- (void)onSliderViewAction;
- (void)configSliderWithVisualY:(double)arg1;
- (void)reloadEmotionBoardView;
- (void)setBackgroundTransparent;
- (void)resetUI;
- (void)setBackgroundTranslucent;
- (void)setSendButtonHidden:(_Bool)arg1;
- (void)setEmoticonAccessibility:(_Bool)arg1;
- (void)SetCanSend:(_Bool)arg1;
- (void)UnRegisterDelegate;
- (void)RegisterDelegate:(id)arg1;
- (_Bool)isSticker;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initView;
- (void)initData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

